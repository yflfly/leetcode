'''
96. 不同的二叉搜索树
给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？
示例:
输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

考查点：树、动态规划
'''


class Solution:
    def numTrees(self, n: int) -> int:
        dp = [0] * (n + 1)
        dp[0], dp[1] = 1, 1

        for i in range(2, n + 1):
            for j in range(1, i + 1):
                dp[i] += dp[j - 1] * dp[i - j]

        return dp[n]
'''
方法：动态规划
给定一个有序序列1……n，为了构建一棵二叉搜索树，我们遍历每个数字i，将该数字作为树根，根据1……(i-1)序列作为左子树，将(i+1)……n序列作为右子树。接着可以按照同样的方式递归构建左子树和右子树
'''