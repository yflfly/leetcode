# coding:utf-8
'''
插入排序
不断地从后面选一个数，然后插入到前面已经有序的序列里
算法实现：直接插入排序是将无序序列中的数据插入到有序的序列中，在遍历无序序列时，首先拿无序序列中的首元素去与有序序列中的每一个元素比较并插入到合适的位置，一直到无序序列中的所有元素插完为止。对于一个无序序列arr{4，6，8，5，9}来说，我们首先先确定首元素4是有序的，然后在无序序列中向右遍历，6大于4则它插入到4的后面，再继续遍历到8，8大于6则插入到6的后面，这样继续直到得到有序序列{4，5，6，8，9}。
时间复杂度：o(n^2)

'''


# 插入排序
def insert_sort(alist):
    n = len(alist)
    for i in range(1, n):
        while (i > 0):  # 找合适的插入位置 一个一个进行大小的比较
            if alist[i] < alist[i - 1]:
                alist[i], alist[i - 1] = alist[i - 1], alist[i]
                i -= 1
            else:
                break
    return alist
lst = [3, 5, 1, 2, 4, 10]
print(insert_sort(lst))  # [1, 2, 3, 4, 5, 10]