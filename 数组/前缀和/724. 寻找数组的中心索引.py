'''
724. 寻找数组的中心索引
题目描述
给定一个整数类型的数组 nums，请编写一个能够返回数组 “中心索引” 的方法。
我们是这样定义数组 中心索引 的：数组中心索引的左侧所有元素相加的和等于右侧所有元素相加的和。
如果数组不存在中心索引，那么我们应该返回 -1。如果数组有多个中心索引，那么我们应该返回最靠近左边的那一个。
示例 1：
输入：
nums = [1, 7, 3, 6, 5, 6]
输出：3
解释：
索引 3 (nums[3] = 6) 的左侧数之和 (1 + 7 + 3 = 11)，与右侧数之和 (5 + 6 = 11) 相等。
同时, 3 也是第一个符合要求的中心索引。
示例 2：
输入：
nums = [1, 2, 3]
输出：-1
解释：
数组中不存在满足此条件的中心索引。
'''


# 前缀和的方法

class Solution:
    def pivotIndex(self, nums: List[int]) -> int:
        sum_all = sum(nums)
        left_sum = 0  # [2,1,-1]
        for i in range(len(nums)):
            if sum_all - left_sum - nums[i] == left_sum:
                return i
            left_sum += nums[i]
        return -1


'''
我们可以一下就能把这个题目做出来，先遍历一遍求出数组的和，
然后第二次遍历时，直接进行对比左半部分和右半部分是否相同，如果相同则返回 true，不同则继续遍历。
'''
